{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.8",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@webcobra/structures!",
  "docComment": "",
  "name": "@webcobra/structures",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@webcobra/structures!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@webcobra/structures!DoublyLinkedList:class",
          "docComment": "/**\n * Doubly linked list\n *\n * Uses ES2015 Map for storing items which is more efficient in manipulating list items instead array especially on large amount of nodes. Contains helper functions for inserting, checking, etc\n *\n * todo: usage\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class DoublyLinkedList<ListId, ListItem extends "
            },
            {
              "kind": "Reference",
              "text": "LinkedListItem",
              "canonicalReference": "@webcobra/structures!LinkedListItem:class"
            },
            {
              "kind": "Content",
              "text": "<ListId, ListValue>"
            },
            {
              "kind": "Content",
              "text": ", ListValue extends "
            },
            {
              "kind": "Reference",
              "text": "LinkedListValue",
              "canonicalReference": "@webcobra/structures!LinkedListValue:interface"
            },
            {
              "kind": "Content",
              "text": "<ListId>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListId",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItem",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListValue",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DoublyLinkedList",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#_length:member",
              "docComment": "/**\n * Indicates amount of items in list, usually must be equal to map length\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Iterator shorthand for iterating list object just like it is a native array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList:constructor(1)",
              "docComment": "/**\n * Initialize list with items array, first array item becomes a head\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(items: "
                },
                {
                  "kind": "Content",
                  "text": "ListItem[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#append:member(1)",
              "docComment": "/**\n * Adds the element at the end of the linked list\n *\n * @param key - a key which is used to store new item in list\n *\n * @param newItem - item for adding to the end of list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "append(key: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ", newItem: "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "newItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "append"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#clear:member(1)",
              "docComment": "/**\n * Resets list\n *\n * Removes all items, sets length to zero, head&tail to null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#getBy:member(1)",
              "docComment": "/**\n * Retrieve item by provided key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBy(key: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListItem | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getBy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#hashTable:member",
              "docComment": "/**\n * Store for list items\n *\n * Here used a Map with custom iterator (@see this.*iterator()) instead of usual array cause Map works faster in most operations which required to manipulate linked list. Even iteration in for loop with 'downlevelIteration' flag in most environments works equal or faster. (@see performance tests)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly hashTable: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListItem>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hashTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#head:member",
              "docComment": "/**\n * First item in a linked list, has no items after it (no prev)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "head: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "head",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#insertNextTo:member(1)",
              "docComment": "/**\n * Insert new item to the list at given position\n *\n * @param newKey - identifier used to store inserted item\n *\n * @param newItem - inserted item\n *\n * @param position - id of existing element next to which make insert\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertNextTo(newKey: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ", newItem: "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": ", position: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "newItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertNextTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#insertPrevTo:member(1)",
              "docComment": "/**\n * Insert new item to the list at given position\n *\n * @param newKey - identifier used to store inserted item\n *\n * @param newItemIn - inserted item\n *\n * @param position - id of existing element previous to which make insert\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertPrevTo(newKey: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ", newItemIn: "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": ", position: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "newItemIn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertPrevTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#isEmpty:member(1)",
              "docComment": "/**\n * Indicate that list has no items\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEmpty(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isEmpty"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#iterator:member(1)",
              "docComment": "/**\n * Generator for iterating through list like native array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterator(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "iterator"
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#length:member",
              "docComment": "/**\n * Get the amount of items in list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#prepend:member(1)",
              "docComment": "/**\n * Adds the element at the beginning of the linked list\n *\n * @param key - a key which is used to store new item in list\n *\n * @param newItem - item for adding to the beginning of list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prepend(key: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ", newItem: "
                },
                {
                  "kind": "Content",
                  "text": "ListItem"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "newItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "prepend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#remove:member(1)",
              "docComment": "/**\n * Deletes item from linked list\n *\n * @param key - identifier for seeking deletion item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(key: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "ListValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "remove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#removeHead:member(1)",
              "docComment": "/**\n * Deletes first item in a list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeHead(): "
                },
                {
                  "kind": "Content",
                  "text": "ListValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "removeHead"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#removeTail:member(1)",
              "docComment": "/**\n * Deletes last item in a list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeTail(): "
                },
                {
                  "kind": "Content",
                  "text": "ListValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "removeTail"
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#tail:member",
              "docComment": "/**\n * Last item in a linked list, has no items before it (no next)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tail: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tail",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!DoublyLinkedList#toArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toArray"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@webcobra/structures!LinkedListItem:class",
          "docComment": "/**\n * Wraps linked list item with various information about siblings\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class LinkedListItem<ListId, ListValue extends "
            },
            {
              "kind": "Reference",
              "text": "LinkedListValue",
              "canonicalReference": "@webcobra/structures!LinkedListValue:interface"
            },
            {
              "kind": "Content",
              "text": "<ListId>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListId",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListValue",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "LinkedListItem",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@webcobra/structures!LinkedListItem:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `LinkedListItem` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(value: "
                },
                {
                  "kind": "Content",
                  "text": "ListValue"
                },
                {
                  "kind": "Content",
                  "text": ", prev?: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>"
                },
                {
                  "kind": "Content",
                  "text": ", next?: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "prev",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "next",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#getLoadInfo:member(1)",
              "docComment": "/**\n * Get loading metadata - loading direction and edge item id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLoadInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LoadMetadata",
                  "canonicalReference": "@webcobra/structures!LoadMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getLoadInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#headDistance:member(1)",
              "docComment": "/**\n * Calculates element amount left to list begin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headDistance(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "headDistance"
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!LinkedListItem#id:member",
              "docComment": "/**\n * Item identifier\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#log:member(1)",
              "docComment": "/**\n * Make string representation of this item for debugging purposes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "log(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "log"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#markAsBegin:member(1)",
              "docComment": "/**\n * Marks this element as global list begin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "markAsBegin(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "markAsBegin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#markAsEnd:member(1)",
              "docComment": "/**\n * Marks this element as global list ending\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "markAsEnd(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "markAsEnd"
            },
            {
              "kind": "Method",
              "canonicalReference": "@webcobra/structures!LinkedListItem#needLoad:member(1)",
              "docComment": "/**\n * Determines if this element has siblings which require loading\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needLoad(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "needLoad"
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!LinkedListItem#next:member",
              "docComment": "/**\n * Pointer to next list item\n *\n * null - no loaded next items undefined - this item is list last element, no loading required\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue> | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "next",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!LinkedListItem#prev:member",
              "docComment": "/**\n * Pointer to previous list item\n *\n * null - no loaded previous items undefined - this item is list starting element\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prev: "
                },
                {
                  "kind": "Reference",
                  "text": "LinkedListItem",
                  "canonicalReference": "@webcobra/structures!LinkedListItem:class"
                },
                {
                  "kind": "Content",
                  "text": "<ListId, ListValue> | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "prev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@webcobra/structures!LinkedListItem#value:member",
              "docComment": "/**\n * Original list item value which was wrapped\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "ListValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@webcobra/structures!LinkedListValue:interface",
          "docComment": "/**\n * Linked list basic value\n *\n * @param id - Unique item identifier across list\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LinkedListValue<ListId> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListId",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "LinkedListValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@webcobra/structures!LinkedListValue#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "ListId"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@webcobra/structures!RetrieveDirection:enum",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum RetrieveDirection "
            }
          ],
          "releaseTag": "Public",
          "name": "RetrieveDirection",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@webcobra/structures!RetrieveDirection.down:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "down = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "down",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@webcobra/structures!RetrieveDirection.up:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "up = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "up",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
